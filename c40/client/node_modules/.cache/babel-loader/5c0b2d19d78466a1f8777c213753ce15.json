{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nimport request from 'superagent';\nimport history from '../history';\nvar SERVER_URL = 'http://localhost:3001/api/';\nexport function addData(id, title, rate, description, price, brand, dproduct) {\n  return {\n    type: types.ADD_DATA,\n    id: id,\n    title: title,\n    rate: rate,\n    description: description,\n    price: price,\n    brand: brand,\n    dproduct: dproduct\n  };\n}\n\nfunction addFailure() {\n  return {\n    type: types.ADD_FAILURE\n  };\n}\n\nfunction addSuccess(product) {\n  return {\n    type: types.ADD_SUCCESS,\n    product: product\n  };\n}\n\nexport function addAds(title, rate, description, price, brand, dproduct) {\n  var id = Date.now();\n  return function (dispatch) {\n    dispatch(addData(id, title, rate, description, price, brand, dproduct));\n    return request.post(\"\".concat(SERVER_URL, \"products\")).type('form').send({\n      id: id\n    }).send({\n      title: title\n    }).send({\n      rate: rate\n    }).send({\n      description: description\n    }).send({\n      price: price\n    }).send({\n      brand: brand\n    }).send({\n      dproduct: dproduct\n    }).end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(addFailure());\n      } else {\n        dispatch(addSuccess(res.body));\n        history.push('/');\n      }\n    });\n  };\n}\n\nfunction loadFailure() {\n  return {\n    type: types.LOAD_FAILURE\n  };\n}\n\nfunction loadSuccess(product) {\n  return {\n    type: types.LOAD_SUCCESS,\n    product: product\n  };\n}\n\nexport function loadProducts() {\n  return function (dispatch) {\n    return request.get(\"\".concat(SERVER_URL, \"products\")).set('Accept', 'application/json').end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(loadFailure());\n      } else {\n        dispatch(loadSuccess(res.body));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/bambang/Desktop/rubicamp/challenge/c40/client/src/actions/index.js"],"names":["types","request","history","SERVER_URL","addData","id","title","rate","description","price","brand","dproduct","type","ADD_DATA","addFailure","ADD_FAILURE","addSuccess","product","ADD_SUCCESS","addAds","Date","now","dispatch","post","send","end","err","res","console","error","body","push","loadFailure","LOAD_FAILURE","loadSuccess","LOAD_SUCCESS","loadProducts","get","set"],"mappings":"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","sourcesContent":["import * as types from '../constants/ActionTypes'\nimport request from 'superagent'\nimport history from '../history';\n\nconst SERVER_URL = 'http://localhost:3001/api/'\n\nexport function addData(id, title, rate, description, price, brand, dproduct){\n  return {type: types.ADD_DATA, id, title, rate, description, price, brand, dproduct}\n}\n\nfunction addFailure(){\n  return {type: types.ADD_FAILURE}\n}\n\nfunction addSuccess(product){\n  return {type: types.ADD_SUCCESS, product}\n}\n\nexport function addAds(title, rate, description, price, brand, dproduct) {\n  let id = Date.now()\n  return dispatch => {\n    dispatch(addData(id, title, rate, description, price, brand, dproduct))\n    return request\n    .post(`${SERVER_URL}products`)\n    .type('form')\n    .send({id: id})\n    .send({title: title})\n    .send({rate: rate})\n    .send({description: description})\n    .send({price: price})\n    .send({brand: brand})\n    .send({dproduct: dproduct})\n    .end((err, res) => {\n      if(err){\n        console.error(err);\n        dispatch(addFailure())\n      }else {\n        dispatch(addSuccess(res.body))\n        history.push('/');\n      }\n    })\n  }\n}\n\nfunction loadFailure(){\n  return {type: types.LOAD_FAILURE}\n}\n\nfunction loadSuccess(product){\n  return {type: types.LOAD_SUCCESS, product}\n}\n\nexport function loadProducts(){\n  return dispatch => {\n    return request\n    .get(`${SERVER_URL}products`)\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if(err){\n        console.error(err)\n        dispatch(loadFailure())\n      }else{\n        dispatch(loadSuccess(res.body))\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}